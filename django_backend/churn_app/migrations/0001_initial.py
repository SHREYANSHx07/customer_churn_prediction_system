# Generated by Django 4.2.7 on 2025-07-06 15:22

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.CharField(max_length=50, unique=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='Male', max_length=10)),
                ('senior_citizen', models.BooleanField(default=False)),
                ('partner', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=10)),
                ('dependents', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=10)),
                ('tenure', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('phone_service', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=10)),
                ('multiple_lines', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('No phone service', 'No phone service')], default='No', max_length=20)),
                ('internet_service', models.CharField(choices=[('DSL', 'DSL'), ('Fiber optic', 'Fiber optic'), ('No', 'No')], default='No', max_length=20)),
                ('online_security', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('No internet service', 'No internet service')], default='No', max_length=20)),
                ('online_backup', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('No internet service', 'No internet service')], default='No', max_length=20)),
                ('device_protection', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('No internet service', 'No internet service')], default='No', max_length=20)),
                ('tech_support', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('No internet service', 'No internet service')], default='No', max_length=20)),
                ('streaming_tv', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('No internet service', 'No internet service')], default='No', max_length=20)),
                ('streaming_movies', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('No internet service', 'No internet service')], default='No', max_length=20)),
                ('contract', models.CharField(choices=[('Month-to-month', 'Month-to-month'), ('One year', 'One year'), ('Two year', 'Two year')], default='Month-to-month', max_length=20)),
                ('paperless_billing', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=10)),
                ('payment_method', models.CharField(choices=[('Electronic check', 'Electronic check'), ('Mailed check', 'Mailed check'), ('Bank transfer (automatic)', 'Bank transfer (automatic)'), ('Credit card (automatic)', 'Credit card (automatic)')], default='Electronic check', max_length=30)),
                ('monthly_charges', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_charges', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0)])),
                ('churn', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('churn_probability', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('risk_level', models.CharField(blank=True, choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High')], max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'customers',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MLModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='churn_prediction_model', max_length=100)),
                ('version', models.CharField(default='1.0', max_length=20)),
                ('algorithm', models.CharField(default='RandomForest', max_length=50)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('precision', models.FloatField(blank=True, null=True)),
                ('recall', models.FloatField(blank=True, null=True)),
                ('f1_score', models.FloatField(blank=True, null=True)),
                ('training_samples', models.IntegerField(default=0)),
                ('feature_count', models.IntegerField(default=0)),
                ('feature_names', models.TextField(default='[]')),
                ('model_file_path', models.CharField(blank=True, max_length=255, null=True)),
                ('trained_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'ml_models',
                'ordering': ['-trained_at'],
            },
        ),
    ]
